//sum of overlopping element :ARRAY

ALGORITHM OverloppSum
VAR
setone,settwo: ARRAY_OF Integer[10];
sum:Integer;

Begin
setone:={5,1,3,4};
settwo:={3,8,5,4};
sum:=0;

FOR i FROM 0 TO setone.length-1 DO
 FOR j FROM 0 TO settwo.length-1 DO
  IF (setone[i]===settwo[j]) THEN
   sum += setone[i]*2;
  END_IF
 END_FOR
END_FOR
write("SUM OF OVELOPPING ELEMENTS IS: "+sum);

END
*********
//sum of overlopping element :hashtable

ALGORITHM OverloppSum
VAR
 setthree :HashTable<Integer,Integer>;
 sum,element,count,itr:Integer;

Begin
setthree:= new HashTable();
setone:={5,1,3,4};
settwo:={3,8,5,4};
setone:=setone.concat(settwo);

FOR i FROM 0 TO setone.length-1 DO
element:= setone[i];
 IF (setthree.hasOwnProperty(element)) THEN
    count:=setthree.get(element);
    setthree.put(element,count+1);
  ELSE
    setthree.put(element,1);
 END_IF
END_FoR

let n:=setthree.values();
let keys := setthree.keys()
 itr := keys.iterator();
 while(itr.hasNext()) DO
 
  let  integer key :=itr.next();
    IF(n[key]===2) THEN 
     sum+= key*2; 
    END_IF

 END_WHILE    
 write("THE SUM OF OVERLOPPING ELEMENTS IS:" + sum);

End